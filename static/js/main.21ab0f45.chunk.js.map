{"version":3,"sources":["components/HomePage.js","components/AboutPage.js","components/common/Header.js","appDispatcher.js","actions/actionTypes.js","stores/courseStore.js","components/CourseList.js","api/apiUtils.js","api/courseApi.js","actions/courseActions.js","components/CoursesPage.js","components/NotFoundPage.js","components/common/TextInput.js","components/CourseForm.js","components/ManagedCoursePage.js","components/App.js","index.js"],"names":["HomePage","className","to","AboutPage","React","Component","Header","activeStyle","color","exact","dispatcher","Dispatcher","CREATE_COURSE","UPDATE_COURSE","DELETE_COURSE","LOAD_COURSES","_courses","store","callback","this","on","removeListener","emit","slug","find","course","EventEmitter","register","action","actionType","actionTypes","push","emitChange","map","id","filter","parseInt","courses","CourseList","props","key","onClick","deleteCourse","title","authorId","category","defaultProps","handleResponse","response","a","async","ok","json","status","text","error","Error","handleError","console","baseUrl","process","REACT_APP_API_URL","saveCourse","fetch","method","headers","body","JSON","stringify","then","catch","courseApi","savedCourse","dispatch","loadCourses","courseId","CoursesPage","useState","courseStore","getCourses","setCourses","onChange","useEffect","addChangeListener","length","removeChangeListener","NotFoundPage","TextInput","wrapperClass","htmlFor","label","type","name","value","CourseForm","onSubmit","errors","ManagedCoursePage","setErrors","setCourse","formIsValid","_errors","Object","keys","match","params","courseActions","getCourseBySlug","target","event","preventDefault","history","toast","success","App","autoClose","hideProgressBar","path","component","from","render","document","getElementById"],"mappings":"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","file":"static/js/main.21ab0f45.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction HomePage() {\n  return (\n    <div className=\"jumbotron\">\n      <h1>Pluralsight Admin</h1>\n      <p>React, Flux, and React Router for ultra-fast responsive web apps.</p>\n      <Link to=\"/about\" className=\"btn btn-primary\">\n        About\n      </Link>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\n\nclass AboutPage extends React.Component {\n  render() {\n    return (\n      <>\n        <h2>About</h2>\n        <p>This app uses React.</p>\n      </>\n    );\n  }\n}\n\nexport default AboutPage;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Header() {\n  const activeStyle = { color: \"orange\" };\n  return (\n    <nav>\n      <NavLink activeStyle={activeStyle} exact to=\"/\">\n        Home\n      </NavLink>{\" \"}\n      |\n      <NavLink activeStyle={activeStyle} to=\"/about\">\n        About\n      </NavLink>{\" \"}\n      |\n      <NavLink activeStyle={activeStyle} to=\"/courses\">\n        Courses\n      </NavLink>\n    </nav>\n  );\n}\n\nexport default Header;\n","import { Dispatcher } from \"flux\";\nconst dispatcher = new Dispatcher();\nexport default dispatcher;\n","export default {\n  CREATE_COURSE: \"CREATE_COURSE\",\n  UPDATE_COURSE: \"UPDATE_COURSE\",\n  DELETE_COURSE: \"DELETE_COURSE\",\n  LOAD_COURSES: \"LOAD_COURSES\"\n};\n","import { EventEmitter } from \"events\";\nimport Dispatcher from \"../appDispatcher\";\nimport actionTypes from \"../actions/actionTypes\";\n\nconst CHANGE_EVENT = \"change\";\nlet _courses = [];\n\nclass CourseStore extends EventEmitter {\n  addChangeListener(callback) {\n    this.on(CHANGE_EVENT, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(CHANGE_EVENT, callback);\n  }\n\n  emitChange() {\n    this.emit(CHANGE_EVENT);\n  }\n\n  getCourses() {\n    return _courses;\n  }\n\n  getCourseBySlug(slug) {\n    return _courses.find(course => course.slug === slug);\n  }\n}\n\nconst store = new CourseStore();\n\nDispatcher.register(action => {\n  switch (action.actionType) {\n    case actionTypes.CREATE_COURSE:\n      _courses.push(action.course);\n      store.emitChange();\n      break;\n    case actionTypes.UPDATE_COURSE:\n      _courses = _courses.map(course =>\n        course.id === action.course.id ? action.course : course\n      );\n      store.emitChange();\n      break;\n    case actionTypes.DELETE_COURSE:\n      _courses = _courses.filter(\n        course => course.id !== parseInt(action.id, 10)\n      );\n      store.emitChange();\n      break;\n    case actionTypes.LOAD_COURSES:\n      _courses = action.courses;\n      store.emitChange();\n      break;\n    default:\n    // nothing to do here\n  }\n});\n\nexport default store;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nfunction CourseList(props) {\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>&nbsp;</th>\n          <th>Title</th>\n          <th>Author ID</th>\n          <th>Category</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.courses.map(course => {\n          return (\n            <tr key={course.id}>\n              <td>\n                <button\n                  className=\"btn btn-outline-danger\"\n                  onClick={() => props.deleteCourse(course.id)}\n                >\n                  Delete\n                </button>\n              </td>\n              <td>\n                <Link to={\"/course/\" + course.slug}>{course.title}</Link>\n              </td>\n              <td>{course.authorId}</td>\n              <td>{course.category}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nCourseList.propTypes = {\n  deleteCourse: PropTypes.func.isRequired,\n  courses: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      authorId: PropTypes.number.isRequired,\n      category: PropTypes.string.isRequired\n    })\n  ).isRequired\n};\n\nCourseList.defaultProps = {\n  courses: []\n};\n\nexport default CourseList;\n","export async function handleResponse(response) {\n  if (response.ok) return response.json();\n  if (response.status === 400) {\n    // So, a server-side validation error occurred.\n    // Server side validation returns a string error message, so parse as text instead of json.\n    const error = await response.text();\n    throw new Error(error);\n  }\n  throw new Error(\"Network response was not ok.\");\n}\n\n// In a real app, would likely call an error logging service.\nexport function handleError(error) {\n  // eslint-disable-next-line no-console\n  console.error(\"API call failed. \" + error);\n  throw error;\n}\n","import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrl = process.env.REACT_APP_API_URL + \"/courses/\";\n\nexport function getCourses() {\n  return fetch(baseUrl)\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function getCourseBySlug(slug) {\n  return fetch(baseUrl + \"?slug=\" + slug)\n    .then(response => {\n      if (!response.ok) throw new Error(\"Network response was not ok.\");\n      return response.json().then(courses => {\n        if (courses.length !== 1) throw new Error(\"Course not found: \" + slug);\n        return courses[0]; // should only find one course for a given slug, so return it.\n      });\n    })\n    .catch(handleError);\n}\n\nexport function saveCourse(course) {\n  return fetch(baseUrl + (course.id || \"\"), {\n    method: course.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify({\n      ...course,\n      // Parse authorId to a number (in case it was sent as a string).\n      authorId: parseInt(course.authorId, 10)\n    })\n  })\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function deleteCourse(courseId) {\n  return fetch(baseUrl + courseId, { method: \"DELETE\" })\n    .then(handleResponse)\n    .catch(handleError);\n}\n","import dispatcher from \"../appDispatcher\";\nimport * as courseApi from \"../api/courseApi\";\nimport actionTypes from \"./actionTypes\";\n\nexport function saveCourse(course) {\n  return courseApi.saveCourse(course).then(savedCourse => {\n    // Hey dispatcher, go tell all the stores that a course was just created or updated.\n    dispatcher.dispatch({\n      actionType: course.id\n        ? actionTypes.UPDATE_COURSE\n        : actionTypes.CREATE_COURSE,\n      course: savedCourse\n    });\n  });\n}\n\nexport function loadCourses() {\n  return courseApi.getCourses().then(courses => {\n    dispatcher.dispatch({\n      actionType: actionTypes.LOAD_COURSES,\n      courses\n    });\n  });\n}\n\nexport function deleteCourse(id) {\n  return courseApi.deleteCourse(id).then(() => {\n    dispatcher.dispatch({\n      actionType: actionTypes.DELETE_COURSE,\n      id\n    });\n  });\n}\n","import React, { useState, useEffect } from \"react\";\nimport courseStore from \"../stores/courseStore\";\nimport CourseList from \"./CourseList\";\nimport { Link } from \"react-router-dom\";\nimport { loadCourses, deleteCourse } from \"../actions/courseActions\";\n\nfunction CoursesPage() {\n  const [courses, setCourses] = useState(courseStore.getCourses());\n\n  useEffect(() => {\n    courseStore.addChangeListener(onChange);\n    if (courseStore.getCourses().length === 0) loadCourses();\n    return () => courseStore.removeChangeListener(onChange); // clean up on unmount\n  }, []);\n\n  function onChange() {\n    setCourses(courseStore.getCourses());\n  }\n\n  return (\n    <>\n      <h2>Courses</h2>\n      <Link className=\"btn btn-primary\" to=\"/course\">\n        Add course\n      </Link>\n      <CourseList courses={courses} deleteCourse={deleteCourse} />\n    </>\n  );\n}\n\nexport default CoursesPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NotFoundPage() {\n  return (\n    <div>\n      <h2>Page Not Found</h2>\n      <p>\n        <Link to=\"/\">Back to Home</Link>\n      </p>\n    </div>\n  );\n}\n\nexport default NotFoundPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction TextInput(props) {\n  let wrapperClass = \"form-group\";\n  if (props.error && props.error.length > 0) {\n    wrapperClass += \" has-error\";\n  }\n\n  return (\n    <div className={wrapperClass}>\n      <label htmlFor={props.id}>{props.label}</label>\n      <div className=\"field\">\n        <input\n          id={props.id}\n          type=\"text\"\n          onChange={props.onChange}\n          name={props.name}\n          className=\"form-control\"\n          value={props.value || \"\"}\n        />\n      </div>\n      {props.error && <div className=\"alert alert-danger\">{props.error}</div>}\n    </div>\n  );\n}\n\nTextInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  error: PropTypes.string\n};\n\nTextInput.defaultProps = {\n  error: \"\"\n};\n\nexport default TextInput;\n","import React from \"react\";\nimport TextInput from \"./common/TextInput\";\nimport PropTypes from \"prop-types\";\n\nfunction CourseForm(props) {\n  return (\n    <form onSubmit={props.onSubmit}>\n      <TextInput\n        id=\"title\"\n        label=\"Title\"\n        onChange={props.onChange}\n        name=\"title\"\n        value={props.course.title}\n        error={props.errors.title}\n      />\n\n      <div className=\"form-group\">\n        <label htmlFor=\"author\">Author</label>\n        <div className=\"field\">\n          <select\n            id=\"author\"\n            name=\"authorId\"\n            onChange={props.onChange}\n            value={props.course.authorId}\n            className=\"form-control\"\n          >\n            <option value=\"\" />\n            <option value=\"1\">Cory House</option>\n            <option value=\"2\">Scott Allen</option>\n          </select>\n        </div>\n        {props.errors.authorId && (\n          <div className=\"alert alert-danger\">{props.errors.authorId}</div>\n        )}\n      </div>\n\n      <TextInput\n        id=\"category\"\n        label=\"Category\"\n        onChange={props.onChange}\n        name=\"category\"\n        value={props.course.category}\n        error={props.errors.category}\n      />\n\n      <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\n    </form>\n  );\n}\n\nCourseForm.propTypes = {\n  course: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nexport default CourseForm;\n","import React, { useState, useEffect } from \"react\";\nimport { Prompt } from \"react-router-dom\";\nimport CourseForm from \"./CourseForm\";\nimport courseStore from \"../stores/courseStore\";\nimport { toast } from \"react-toastify\";\nimport * as courseActions from \"../actions/courseActions\";\n\nconst ManagedCoursePage = props => {\n  const [errors, setErrors] = useState({});\n  const [courses, setCourses] = useState(courseStore.getCourses());\n  const [course, setCourse] = useState({\n    id: null,\n    slug: \"\",\n    title: \"\",\n    authorId: null,\n    category: \"\"\n  });\n\n  useEffect(() => {\n    courseStore.addChangeListener(onChange);\n    const slug = props.match.params.slug;\n    if (courses.length === 0) {\n      courseActions.loadCourses();\n    } else if (slug) {\n      setCourse(courseStore.getCourseBySlug(slug));\n    }\n    return () => courseStore.removeChangeListener(onChange);\n  }, [courses.length, props.match.params.slug]);\n\n  function onChange() {\n    setCourses(courseStore.getCourses());\n  }\n\n  function handleChange({ target }) {\n    setCourse({\n      ...course,\n      [target.name]: target.value\n    });\n  }\n\n  function formIsValid() {\n    const _errors = {};\n\n    if (!course.title) _errors.title = \"Title is required\";\n    if (!course.authorId) _errors.authorId = \"Author ID is required\";\n    if (!course.category) _errors.category = \"Category is required\";\n\n    setErrors(_errors);\n\n    // Form is valid if the errors object has no properties\n    return Object.keys(_errors).length === 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (!formIsValid) return;\n\n    courseActions.saveCourse(course).then(() => {\n      props.history.push(\"/courses\");\n      toast.success(\"Course saved.\");\n    });\n  }\n\n  return (\n    <>\n      <h2>Manage Course</h2>\n      {/* <Prompt when={true} message=\"Are you sure you want to leave?\" /> */}\n      <CourseForm\n        errors={errors}\n        course={course}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n    </>\n  );\n};\n\nexport default ManagedCoursePage;\n","import React from \"react\";\nimport HomePage from \"./HomePage\";\nimport AboutPage from \"./AboutPage\";\nimport Header from \"./common/Header\";\nimport CoursesPage from \"./CoursesPage\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport NotFoundPage from \"./NotFoundPage\";\nimport ManagedCoursePage from \"./ManagedCoursePage\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <ToastContainer autoClose={3000} hideProgressBar />\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/courses\" component={CoursesPage} />\n        <Route path=\"/course/:slug\" component={ManagedCoursePage} />\n        <Route path=\"/course\" component={ManagedCoursePage} />\n        <Route path=\"/about\" component={AboutPage} />\n        <Redirect from=\"/about-page\" to=\"about\" />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./components/App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nrender(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}